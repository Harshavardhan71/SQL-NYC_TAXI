-- NYC Yellow Taxi Case Study
CREATE DATABASE taxiDB;
USE taxiDB;

-- Tasks: 
-- 1. Create a table named taxidata. 

CREATE TABLE TAXIDATA (
    VENDOR_ID            VARCHAR(50),
    PICKUP_DATETIME      DATETIME,  -- Changed from VARCHAR(50) to DATETIME
    DROPOFF_DATETIME     DATETIME,  -- Changed from VARCHAR(50) to DATETIME
    PASSENGER_COUNT      INT,
    TRIP_DISTANCE        DECIMAL(9, 6),
    PICKUP_LONGITUDE     DECIMAL(9, 6),
    PICKUP_LATITUDE      DECIMAL(9, 6),
    RATE_CODE            INT,
    STORE_AND_FWD_FLAG   VARCHAR(50),
    DROPOFF_LONGITUDE    DECIMAL(9, 6),
    DROPOFF_LATITUDE     DECIMAL(9, 6),
    PAYMENT_TYPE         VARCHAR(50),
    FARE_AMOUNT          DECIMAL(9, 6),
    EXTRA                DECIMAL(9, 6),
    MTA_TAX             DECIMAL(9, 6),
    TIP_AMOUNT           DECIMAL(9, 6),
    TOLLS_AMOUNT         DECIMAL(9, 6),
    TOTAL_AMOUNT         DECIMAL(9, 6),
    TRIP_TIME_IN_SECS    INT
);

SELECT * FROM taxi_trip_data;

INSERT INTO TAXIDATA (
    VENDOR_ID, PICKUP_DATETIME, DROPOFF_DATETIME, PASSENGER_COUNT, TRIP_DISTANCE, 
    PICKUP_LONGITUDE, PICKUP_LATITUDE, RATE_CODE, STORE_AND_FWD_FLAG, DROPOFF_LONGITUDE, 
    DROPOFF_LATITUDE, PAYMENT_TYPE, FARE_AMOUNT, EXTRA, MTA_TAX, TIP_AMOUNT, 
    TOLLS_AMOUNT, TOTAL_AMOUNT, TRIP_TIME_IN_SECS
)
SELECT 
    VendorID, 
    TRY_CAST(tpep_pickup_datetime AS DATETIME), 
    TRY_CAST(tpep_dropoff_datetime AS DATETIME), 
    passenger_count, 
    trip_distance, 
    pickup_longitude, 
    pickup_latitude, 
    RateCodeID, 
    store_and_fwd_flag, 
    dropoff_longitude, 
    dropoff_latitude, 
    payment_type, 
    fare_amount, 
    extra, 
    mta_tax, 
    tip_amount, 
    tolls_amount, 
    total_amount, 
    trip_time  -- Ensure this matches the correct data type
FROM dbo.taxi_trip_data
WHERE TRY_CAST(tpep_pickup_datetime AS DATETIME) IS NOT NULL;

  

-- 2. Run some basic queries to check the data is loaded properly.     
SELECT * FROM TAXIDATA;


-- 3. Run the queries required to answer the following questions. 

-- Problem Statement:  
-- * What is the total Number of trips (equal to number of rows)? 
SELECT COUNT(*) AS TOTAL_TRIPS 
FROM TAXIDATA;

-- * What is the total revenue generated by all the trips? 
SELECT SUM(TOTAL_AMOUNT) AS TOTAL_REVENUE 
FROM TAXIDATA;

-- * What fraction of the total is paid for tolls? 
SELECT (SUM(TOLLS_AMOUNT) / SUM(TOTAL_AMOUNT))*100 AS TOLL_PCT 
FROM TAXIDATA;

-- * What fraction of it is driver tips? 
SELECT (SUM(TIP_AMOUNT) / SUM(TOTAL_AMOUNT))*100 AS TIP_PCT 
FROM TAXIDATA;

-- * What is the average trip amount?
SELECT AVG(TOTAL_AMOUNT) AS AVERAGE_TRIP_AMOUNT 
FROM TAXIDATA;

-- * For each payment type, display the following details:
-- i. Average fare generated 
-- ii. Average tip 
-- iii. Average tax
SELECT 
    PAYMENT_TYPE,
    AVG(FARE_AMOUNT) AS AVERAGE_FARE,
    AVG(TIP_AMOUNT) AS AVERAGE_TIP,
    AVG(MTA_TAX) AS AVERAGE_TAX 
FROM TAXIDATA
GROUP BY PAYMENT_TYPE;

-- * On average, which hour of the day generates the highest revenue?
SELECT 
    DATEPART(HOUR, PICKUP_DATETIME) AS HOUR,
    AVG(TOTAL_AMOUNT) AS AVERAGE_REVENUE
FROM 
    TAXIDATA
GROUP BY 
    DATEPART(HOUR, PICKUP_DATETIME)
ORDER BY 
    AVERAGE_REVENUE DESC;



-- * What is the average distance of the trips?
SELECT AVG(TRIP_DISTANCE) AS AVERAGE_DISTANCE 
FROM TAXIDATA;  -- Corrected table name from TRIPS4 to TAXIDATA

-- * How many different payment types are used?
SELECT DISTINCT PAYMENT_TYPE 
FROM TAXIDATA;
